{
  "openapi": "3.0.0",
  "info": {
    "title": "API REST",
    "description": "This is a API REST with node",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "url": "http://www.example.com/support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "test"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "summary": "Create a new User",
        "description": "This route is responsible for registering a new user",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user": {
                  "value": {
                    "name": "user",
                    "email": "user@email.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "email and name are required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/bad_request"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all users",
        "description": "This route is responsible for list all user",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete all User",
        "description": "This route is responsible for delete all user",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "put": {
        "summary": "Update User",
        "description": "This route is responsible for updating the user registration",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user": {
                  "value": {
                    "name": "update",
                    "email": "update@email.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "email and name are required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/bad_request"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/not_found"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Find users by ID",
        "description": "This route is responsible for find user id",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/not_found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete all User",
        "description": "This route is responsible for delete all user",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/not_found"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "example": "user"
          },
          "email": {
            "type": "string",
            "example": "user@email.com"
          }
        }
      },
      "bad_request": {
        "type": "object",
        "properties": {
          "message": {
            "type": "array",
            "example": [
              "email is a required field",
              "name is a required field"
            ]
          }
        }
      },
      "not_found": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "user not found"
          }
        }
      }
    }
  }
}
